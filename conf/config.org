#+TITLE: My Emacs Configuration
#+AUTHOR: Samuel Nilsson
#+EMAIL: samuel@samuelnilsson.net
#+OPTIONS: num:nil

* UI

** Disable unused ui elements

#+begin_src emacs-lisp
(setq inhibit-startup-message t) ; Disable the startup message

(menu-bar-mode -1)    ; Disable the menu bar
(tool-bar-mode -1)    ; Disable toolbar
(scroll-bar-mode -1)  ; Disable visible scrollbar
(set-fringe-mode 10)  ; Give some breathing room
#+end_src

** Font

*** Set the font

#+begin_src emacs-lisp
(when (find-font (font-spec :name "Iosevka Nerd Font"))
  (set-face-attribute 'default nil :font "Iosevka Nerd Font" :height @fontSize@))
#+end_src

*** Ligatures

Ligatures are enabled using the ligature.el package, since support is not built into emacs.

#+begin_src emacs-lisp
(when (find-font (font-spec :name "Iosevka Nerd Font"))
  (use-package ligature
    :load-path "path-to-ligature-repo"
    :config
    ;; Enable all Iosevka ligatures in programming modes
    (ligature-set-ligatures 'prog-mode '("<---" "<--"  "<<-" "<-" "->" "-->" "--->" "<->" "<-->" "<--->" "<---->" "<!--"
                                         "<==" "<===" "<=" "=>" "=>>" "==>" "===>" ">=" "<=>" "<==>" "<===>" "<====>" "<!---"
                                         "<~~" "<~" "~>" "~~>" "::" ":::" "==" "!=" "===" "!=="
                                         ":=" ":-" ":+" "<*" "<*>" "*>" "<|" "<|>" "|>" "+:" "-:" "=:" "<******>" "++" "+++"))
    ;; Enables ligature checks globally in all buffers. You can also do it
    ;; per mode with `ligature-mode'.
    (global-ligature-mode t)))
#+end_src

** Theme

Set the catppuccin macchiato theme to not burn my eyes.

#+begin_src emacs-lisp
(load-theme 'catppuccin :no-confirm)
(setq catppuccin-flavor 'macchiato)
(catppuccin-reload)
#+end_src

* Keybindings

Enable vi-like keybindings by using evil mode.

#+begin_src emacs-lisp
(require 'evil)
(evil-mode 1)
#+end_src

* Completion

** UI

Use vertico plugin as completion UI

#+begin_src emacs-lisp
(use-package vertico
  :init
  (vertico-mode))

(use-package savehist
  :init
  (savehist-mode))
#+end_src

** Annotations

Add completion annotations from marginalia package

#+begin_src emacs-lisp
(use-package marginalia
  :bind (:map minibuffer-local-map
         ("M-A" . marginalia-cycle))

  :init
  (marginalia-mode))
#+end_src

** Fuzzy

Enable matching of space separated patterns using orderless

#+begin_src emacs-lisp
(use-package orderless
  :custom
  (completion-styles '(orderless basic))
  (completion-category-overrides '((file (styles basic partial-completion)))))
#+end_src

